name: 'Build Docker Image'
description: 'Create tag and release, Build code, artifact and Docker Image.'

inputs:
  prefix:
    required: true
    description: 'Tag prefix (prod/dev)'

outputs:
  full-tag:
    description: 'Full tag'
    value: ${{ steps.final-tag.outputs.tag }}

runs:
  using: 'composite'
  steps:
  - uses: actions/checkout@v3

  - name: 'Create artifact version'
    id: artifact-version
    uses: navikt/sosialhjelp-ci/actions/create-artifact-version@main

  - name: 'Tag with prefix'
    id: final-tag
    run: |
      echo "tag=${{ inputs.prefix }}-${{ steps.artifact-version.outputs.version }}" >> $GITHUB_OUTPUT
    shell: bash

  - name: 'Release Tag'
    uses: ncipollo/release-action@v1
    env:
      GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
    with:
      tag: ${{ steps.final-tag.outputs.tag }}
      commit: ${{ github.sha }}
      allowUpdates: true

  - name: 'Login to GitHub Docker Registry if GitHub Token Provided'
    if: ${{ env.WORKFLOW_TOKEN != 'false' }}
    uses: docker/login-action@v2
    with:
      registry: ghcr.io
      username: ${{ github.actor }}
      password: ${{ env.WORKFLOW_TOKEN }}

  - name: 'Create docker image tags'
    run: |
      echo "DOCKER_TAG=${{ env.DOCKER_IMAGE }}:${{ steps.final-tag.outputs.tag }}" >> $GITHUB_ENV
    shell: bash

  - name: 'Add latest tag'
    if: github.ref == 'refs/heads/master'
    run: |
      echo "DOCKER_TAG=${{ env.DOCKER_TAG }} -t ${{ env.DOCKER_IMAGE }}:latest" >> $GITHUB_ENV
    shell: bash

  - name: 'Build docker image'
    env:
      NEXT_PUBLIC_RELEASE: ${{ steps.final-tag.outputs.tag }}
      NODE_AUTH_TOKEN: ${{ env.READER_TOKEN }}
    run: docker build --build-arg NODE_AUTH_TOKEN=$NODE_AUTH_TOKEN -t ${{ env.DOCKER_TAG }} .
    shell: bash

  - name: 'Push docker image'
    run: docker push --all-tags ${{ env.DOCKER_IMAGE }}
    shell: bash
